generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model user {
  id                     Int                    @id @default(autoincrement())
  username               String                 @db.VarChar(20)
  password               String                 @db.VarChar(64)
  email                  String                 @unique @db.VarChar(100)
  phone                  String?                @db.VarChar(12)
  gender                 String?                @db.Char(1)
  adr                    String?                @db.VarChar(100)
  role                   user_role              @default(STUDENT)
  acc_status             acc_status             @default(INITIAL)
  school_id              Int
  school                 school                 @relation(fields: [school_id], references: [id])
  classroom              classroom?
  freeprogs_suggetions   freeprogs_suggetions[]
  teacher_relief_period  relief_period[]
  studentdetail          studentdetail?
  teacher_subject_detail subject_detail[]
  teacher_time_slot      time_slot[]
  submission             submission[]
  notification           notification[]
  pclass                 pclass[]
  tutorschool_req        tutorschool_req[]
  studenttution          studenttution[]
  tutorpayment           tutorpayment[]

  psubmission        psubmission[]
  teacherattendance  teacherattendance[]
  timeslotattendance timeslotattendance[]
  @@index([school_id], name: "school_id")
}

model studentdetail {
  id           Int                   @id @default(autoincrement())
  user_id      Int
  classid      Int
  status       student_datail_status @default(NO_ENROll)
  regid        String                @default("none") @db.VarChar(20)
  classroom    classroom             @relation(fields: [classid], references: [id])
  user         user                  @relation(fields: [user_id], references: [id])
  optionalsubs optionalsubs[]

  @@index([classid], name: "classid")
  @@index([user_id], name: "user_id")
}

model optionalsubs {
  id               Int            @id @default(autoincrement())
  studentdetail_id Int?
  sd_id            Int
  subjectgroup     subjectgroup
  subject_detail   subject_detail @relation(fields: [sd_id], references: [id])
  studentdetail    studentdetail? @relation(fields: [studentdetail_id], references: [id])

  @@index([sd_id], name: "sd_id")
  @@index([studentdetail_id], name: "studentdetail_id")
}

model classroom {
  id              Int              @id @default(autoincrement())
  grade           grade
  name            String           @db.Char(1)
  school_id       Int
  classteacher_id Int?             @unique
  user            user?            @relation(fields: [classteacher_id], references: [id])
  school          school           @relation(fields: [school_id], references: [id])
  studentdetail   studentdetail[]
  subject_detail  subject_detail[]
  time_slot       time_slot[]

  @@index([school_id], name: "school_id")
}

model school {
  id       Int    @id @default(autoincrement())
  name     String
  address  String
  filename String @default("NA")

  isconfig            Boolean               @default(false)
  classroom           classroom[]
  periodtimes         period_time[]
  schoolsectiondetail schoolsectiondetail[]
  user                user[]
  tutorschool_req     tutorschool_req[]
}

model schoolsectiondetail {
  id         Int                       @id @default(autoincrement())
  grade      schoolsectiondetail_grade
  classcount Int
  school_id  Int
  school     school                    @relation(fields: [school_id], references: [id])

  @@index([school_id], name: "school_id")
}

model subject {
  id             Int                  @id @default(autoincrement())
  code           String               @db.VarChar(6)
  grade          subject_grade
  subjectgroup   subject_subjectgroup
  name           String               @db.VarChar(20)
  subject_detail subject_detail[]
}

model subject_detail {
  id               Int                @unique @default(autoincrement())
  classid          Int
  subjectid        Int
  tsid             Int
  teacher_id       Int
  classroom        classroom          @relation(fields: [classid], references: [id])
  subject          subject            @relation(fields: [subjectid], references: [id])
  teacher          user               @relation(fields: [teacher_id], references: [id])
  optionalsubs     optionalsubs[]
  relief_periods   relief_period[]
  resource_section resource_section[]
  time_slot        time_slot[]
  assmnt           assmnt[]

  timeslotattendance timeslotattendance[]
  @@id([classid, subjectid])
  @@index([subjectid], name: "subjectid")
  @@index([teacher_id], name: "teacher_id")
  @@map("subject detail")
}

model resource_section {
  id               Int               @unique @default(autoincrement())
  name             String
  sdid             Int
  subject_detail   subject_detail    @relation(fields: [sdid], references: [id])
  resource_details resource_detail[]

  @@index([sdid], name: "sdid")
  @@map("resource section")
}

model resource_detail {
  id               Int              @unique @default(autoincrement())
  name             String
  section_id       Int
  type             String           @db.VarChar(6)
  filename         String
  resource_section resource_section @relation(fields: [section_id], references: [id])
  publicresource   publicresource[]

  @@index([section_id], name: "section_id")
  @@map("resource detail")
}

model publicresource {
  id              Int             @unique @default(autoincrement())
  subject         String
  grade           grade
  sectiondisp     String?
  resid           Int
  resource_detail resource_detail @relation(fields: [resid], references: [id])



}

model assmnt {
  id          Int      @unique @default(autoincrement())
  title       String
  discription String   @db.VarChar(500)
  filename    String   @default("NA")
  sdid        Int
  duedate     DateTime

  submission     submission[]
  subject_detail subject_detail @relation(fields: [sdid], references: [id])

}

model submission {
  id         Int      @unique @default(autoincrement())
  filename   String   @default("NA")
  submitdate DateTime
  marks      Int      @default(-1)

  stuid Int
  assid Int

  user   user   @relation(fields: [stuid], references: [id])
  assmnt assmnt @relation(fields: [assid], references: [id])

}

model time_slot {
  id                    Int                     @id @default(autoincrement())
  weekday               Int
  sdid                  Int
  class_id              Int
  peroid_id             Int
  teacher_id            Int
  isTimeChanged         Boolean                 @default(false)
  lastupdated           DateTime?               @db.DateTime(0)
  meetingurl            String?                 @default("NA")
  classroom             classroom               @relation(fields: [class_id], references: [id])
  period_time           period_time             @relation(fields: [peroid_id], references: [id])
  subject_detail        subject_detail          @relation(fields: [sdid], references: [id])
  teacher               user                    @relation(fields: [teacher_id], references: [id])
  reshceduled_timeslots reshceduled_timeslots[]
  relief_period         relief_period[]

  timeslotattendance timeslotattendance[]
  @@index([class_id], name: "class_id")
  @@index([peroid_id], name: "peroid_id")
  @@index([sdid], name: "sdid")
  @@index([teacher_id], name: "teacher_id")
  @@map("time slot")
}

model period_time {
  id                  Int                 @id @default(autoincrement())
  starttime           DateTime            @db.Time(0)
  endtime             DateTime            @db.Time(0)
  period_time_section period_time_section
  school_id           Int
  school              school              @relation(fields: [school_id], references: [id])
  time_slot           time_slot[]

  @@index([school_id], name: "school_id")
  @@map("period time")
}

model reshceduled_timeslots {
  id        Int       @id @default(autoincrement())
  tsid      Int
  starttime DateTime
  endtime   DateTime
  time_slot time_slot @relation(fields: [tsid], references: [id])

  @@index([tsid], name: "tsid")
  @@map("reshceduled timeslots")
}

model relief_period {
  id             Int            @id @default(autoincrement())
  sdid           Int
  tsid           Int
  teacher_id     Int
  leave_id       Int
  status         String         @default("a") @db.Char(1)
  subject_detail subject_detail @relation(fields: [sdid], references: [id])
  time_slot      time_slot      @relation(fields: [tsid], references: [id])
  teacher        user           @relation(fields: [teacher_id], references: [id])
  leave          leave          @relation(fields: [leave_id], references: [id])

  @@index([sdid], name: "sdid")
  @@index([teacher_id], name: "teacher_id")
  @@map("relief period")
}

model leave {
  id       Int       @id @default(autoincrement())
  reason   String
  from_day DateTime
  to_day   DateTime?
  type     String    @db.Char(1)

  relief_period relief_period[]
}

model teacherattendance {
  id        Int @id @default(autoincrement())
  teacherid Int
  month     Int
  all_c     Int @default(0)
  done_c    Int @default(0)
  leave_c   Int @default(0)
  relreq_c  Int @default(0)
  reldone_c Int @default(0)


  teacher user @relation(fields: [teacherid], references: [id])

}

model timeslotattendance {
  id        Int @id @default(autoincrement())
  tsid      Int
  teacherid Int
  sdid      Int

  stucount  Int    @default(0)
  randomnum Int
  date      String @db.VarChar(20)
  status    String @default("b") @db.Char(1)

  teacher        user           @relation(fields: [teacherid], references: [id])
  subject_detail subject_detail @relation(fields: [sdid], references: [id])
  time_slot      time_slot      @relation(fields: [tsid], references: [id])
}

model notification {
  id          Int     @id @default(autoincrement())
  title       String
  discription String
  to          Int
  onClickTo   String?
  type        String? @db.Char(1)
  user        user    @relation(fields: [to], references: [id])
}

model pclass {
  id          Int      @unique @default(autoincrement())
  discription String
  subject     String
  grade       String
  meetingurl  String
  fee         String
  day         String   @db.VarChar(10)
  sttime      DateTime
  endtime     DateTime

  tutorid Int
  tutor   user @relation(fields: [tutorid], references: [id])

  studenttution     studenttution[]
  tutorpayment      tutorpayment[]
  presource_section presource_section[]
  passmnt           passmnt[]
}

model tutorschool_req {
  id            Int    @unique @default(autoincrement())
  discription   String
  qualification String
  status        String @default("a") @db.Char(1)

  schoolid Int
  tutorid  Int
  tutor    user   @relation(fields: [tutorid], references: [id])
  school   school @relation(fields: [schoolid], references: [id])


  @@index([schoolid], name: "schoolid")
  @@map("tutorschool req")
}

model studenttution {
  id     Int    @unique @default(autoincrement())
  status String @default("a") @db.Char(1)

  pclassid  Int
  studentid Int
  student   user   @relation(fields: [studentid], references: [id])
  pclass    pclass @relation(fields: [pclassid], references: [id])


}

model tutorpayment {
  id     Int    @unique @default(autoincrement())
  status String @default("a") @db.Char(1)

  pclassid  Int
  studentid Int
  month     Int
  filename  String @db.VarChar(180)
  student   user   @relation(fields: [studentid], references: [id])
  pclass    pclass @relation(fields: [pclassid], references: [id])


}

model presource_section {
  id                Int                @unique @default(autoincrement())
  name              String
  sdid              Int
  pclass            pclass             @relation(fields: [sdid], references: [id])
  presource_details presource_detail[]

  @@index([sdid], name: "classid")
  @@map("presource section")
}

model presource_detail {
  id                Int               @unique @default(autoincrement())
  name              String
  section_id        Int
  type              String            @db.VarChar(6)
  filename          String
  presource_section presource_section @relation(fields: [section_id], references: [id])

  @@index([section_id], name: "psection_id")
  @@map("presource detail")
}

model passmnt {
  id          Int      @unique @default(autoincrement())
  title       String
  discription String   @db.VarChar(500)
  filename    String   @default("NA")
  sdid        Int
  duedate     DateTime

  psubmission psubmission[]
  pclass      pclass        @relation(fields: [sdid], references: [id])

}

model psubmission {
  id         Int      @unique @default(autoincrement())
  filename   String   @default("NA")
  submitdate DateTime
  marks      Int      @default(-1)

  stuid Int
  assid Int

  user    user    @relation(fields: [stuid], references: [id])
  passmnt passmnt @relation(fields: [assid], references: [id])

}

model freeprogs {
  id          Int     @id @default(autoincrement())
  title       String
  discription String
  time        String?
  imgurl      String?
  link        String?
  rating      Float?
  ratecount   Int?
  subject     String?
  type        String?
  day         String?
  grade       String?
  channel     String?
}

model freeprogs_suggetions {
  id          Int      @id @default(autoincrement())
  user_id     Int
  progtitle   String   @db.VarChar(100)
  discription String   @db.VarChar(300)
  grade       String   @db.VarChar(20)
  channel     String   @db.VarChar(20)
  subject     String   @db.VarChar(20)
  day         String   @db.VarChar(10)
  starttime   DateTime @db.Time(0)
  endtime     DateTime @db.Time(0)
  type        String   @db.VarChar(10)
  student     user     @relation(fields: [user_id], references: [id])

  @@index([user_id], name: "user_id")
  @@map("freeprogs suggetions")
}

enum grade {
  G1
  G2
  G3
  G4
  G5
  G6
  G7
  G8
  G9
  G10
  G11
  G12MATH
  G12BIO
  G12ART
  G12COM
  G12TECH
  G13MATH
  G13BIO
  G13ART
  G13COM
  G13TECH
}

enum subjectgroup {
  COMP
  OPTIONAL_69
  OL_BUCKET_1
  OL_BUCKET_2
  OL_BUCKET_3
  MATH_CHEM_IT
  BIO_PHY_AGRI
  ART_BLA
  COM_IT
  TECH_IT
}

enum period_time_section {
  OL
  AL
  PRIMARY

  @@map("period time_period_time_section")
}

enum user_role {
  STUDENT
  TEACHER
  PRINCIPAl
  SCHOOLADMIN
  ADMIN
  TUTOR
}

enum acc_status {
  INITIAL
  ACTIVE
  REVOKED
}

enum student_datail_status {
  NO_ENROll
  PENDING
  ACTIVE
}

enum schoolsectiondetail_grade {
  G1
  G2
  G3
  G4
  G5
  G6
  G7
  G8
  G9
  G10
  G11
  G12MATH
  G12BIO
  G12ART
  G12COM
  G12TECH
  G13MATH
  G13BIO
  G13ART
  G13COM
  G13TECH
}

enum subject_grade {
  G1
  G2
  G3
  G4
  G5
  G6
  G7
  G8
  G9
  G10
  G11
  G12MATH
  G12BIO
  G12ART
  G12COM
  G12TECH
  G13MATH
  G13BIO
  G13ART
  G13COM
  G13TECH
}

enum subject_subjectgroup {
  COMP
  OPTIONAL_69
  OL_BUCKET_1
  OL_BUCKET_2
  OL_BUCKET_3
  MATH_CHEM_IT
  BIO_PHY_AGRI
  ART_BLA
  COM_IT
  TECH_IT
}
